[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MRP Parameter Optimization with BO",
    "section": "",
    "text": "This website contains the data analysis we performed for the paper Parameter optimization of a stochastic material requirements planning simulation using Bayesian optimization. The paper was published at the ASIM Conference 2023 “Simulation in Production and Logistics”.\nYou can download the data from the GitHub repository."
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "1  Packages and Data",
    "section": "",
    "text": "Code\ninstall.packages(\"tidyverse\")\ninstall.packages(\"scales\")\ninstall.packages(\"ggsci\")\ninstall.packages(\"cowplot\")"
  },
  {
    "objectID": "data.html#data",
    "href": "data.html#data",
    "title": "1  Packages and Data",
    "section": "1.2 Data",
    "text": "1.2 Data\nThe data consists of the experiment’s results that were run with the SimBO framework. SimBO creates raw files are in JSON format, which are further pre-processed for analysis. The following files are the result of the pre-processing, which is done in Python:\n\nexperiments.csv: Contains one line for each candidate of an experiment. Meta data includes the technical experiment id, the bill of materials, the evaluation budget, the algorithm that was used for optimization, and the outcomes costs and service level (mean and standard error of mean)."
  },
  {
    "objectID": "transformations.html",
    "href": "transformations.html",
    "title": "2  Transformations",
    "section": "",
    "text": "This chapter contains the data transformations we performed before analyzing the data."
  },
  {
    "objectID": "transformations.html#data-type-conversion",
    "href": "transformations.html#data-type-conversion",
    "title": "2  Transformations",
    "section": "2.1 Data Type Conversion",
    "text": "2.1 Data Type Conversion\nBefore we analyze the data, we need to convert some of the columns.\n\nlibrary(tidyverse)\nlibrary(ggsci)\n\nexperiments <- read_csv(\"data/experiments.csv\")\n\nalgorithm_levels <- c(\"sobol\", \"gpei\", \"turbo\", \"cma-es\", \"saasbo\")\nalgorithm_labels <- c(\"Sobol\", \"GPEI\", \"TurBO\", \"CMA-ES\", \"SAASBO\")\n\nexperiments <- \n  experiments |> \n  mutate(bom_id = factor(bom_id),\n         replication = as.integer(replication),\n         budget = as_factor(budget),\n         candidate_id = as.integer(candidate_id),\n         num_trials = as.integer(num_trials),\n         num_candidates = as.integer(num_candidates),\n         algorithm = factor(algorithm, levels = algorithm_levels, labels = algorithm_labels)\n         )\n\nexperiments |> \n  count(algorithm, sort = TRUE)\n\n\n\n  \n\n\n\nWe will load the transformed data from an R-data source (RDS) file in the following chapters:\n\nexperiments |> \n  saveRDS(\"data/experiments.rds\")"
  },
  {
    "objectID": "transformations.html#consistent-colors-and-theming",
    "href": "transformations.html#consistent-colors-and-theming",
    "title": "2  Transformations",
    "section": "2.2 Consistent Colors and Theming",
    "text": "2.2 Consistent Colors and Theming\nDefine a consistent color set for the display of the algorithm variable throughout the analysis:\n\n# Consistent colors\nalgorithm_colors <- c(\n  \"Sobol\" = pal_aaas()(5)[1],\n  \"GPEI\" = pal_aaas()(5)[2],\n  \"TurBO\" = pal_aaas()(5)[3],\n  \"CMA-ES\" = pal_aaas()(5)[4],\n  \"SAASBO\" = pal_aaas()(5)[5]\n)\n\nDefine the globally used theme:\n\ntheme_simbo <- function (base_size = 12, base_family = \"Roboto Condensed\") {\n  half_line <- base_size/2\n  theme_bw()\n}\n\ntheme_set(theme_simbo())\n\nExample:\n\n\nCode\nlibrary(scales)\n\nexperiments |> \n  ggplot() +\n  aes(x = algorithm, fill = algorithm) +\n  geom_bar() +\n  scale_fill_manual(values = algorithm_colors) +\n  scale_y_continuous(labels = comma) +\n  labs(x = \"Algorithm\", y = \"Number of Candidates\", fill = \"Algorithm\")"
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "3  Exploration",
    "section": "",
    "text": "In this chapter, we explore the data."
  },
  {
    "objectID": "exploration.html#experiments-overview",
    "href": "exploration.html#experiments-overview",
    "title": "3  Exploration",
    "section": "3.1 Experiments Overview",
    "text": "3.1 Experiments Overview\nThe following table show an overview of all experiments conducted.\n\n\nCode\nexperiments |> \n  group_by(experiment_id, bom_id, algorithm, budget, replication) |> \n  summarize(num_candidates = n(),\n            min_costs = min(candidate_y_costs_mean)) |> \n  ungroup() |> \n  group_by(algorithm, bom_id, budget) |>\n  summarize(num_replications = n_distinct(experiment_id, replication),\n            total_candidates = sum(num_candidates)\n            ) |>\n  ungroup() |> \n  arrange(bom_id, algorithm, budget)"
  },
  {
    "objectID": "paper.html",
    "href": "paper.html",
    "title": "4  Paper",
    "section": "",
    "text": "This chapter contains the plots we used in the paper. They are all focused exclusively on the 20-dimensional bill of material."
  },
  {
    "objectID": "paper.html#filter-experiments-to-n-15",
    "href": "paper.html#filter-experiments-to-n-15",
    "title": "4  Paper",
    "section": "4.1 Filter Experiments to n = 15",
    "text": "4.1 Filter Experiments to n = 15\nWe have randomly sampled a set of 15 replications for each algorithm and budget combination for the 20-dimensional problem. Except for SAASBO, for which we didn’t have sufficient data at the time of publication.\n\n\nCode\n# Load set of experiments that were randomly chosen\nsets <- fromJSON(\"data/experiment_sets.json\") |> \n  clean_names() |> \n  unlist()\n\nids <- c()\nfor(id in sets) {\n  ids <- append(ids, id)\n}\n\n# Add more CMA-ES experiments\n# experiments |>\n#   filter(bom_id == \"20\", algorithm == \"CMA-ES\", budget == 500) |>\n#   mutate(id = paste0(experiment_id, \"_\", replication)) |>\n#   filter(!id %in% ids) |>\n#   distinct(id) |>\n#   slice_sample(n = 10) |>\n#   pull()\n\n# The result saved as a hard-coded vector so we don't get a new sample with each rendering\ncmaes_40 <- c(\"OjSrwARGqEIRQiifgvd1_1\", \"OjSrwARGqEIRQiifgvd1_4\", \"OjSrwARGqEIRQiifgvd1_3\", \"OjSrwARGqEIRQiifgvd1_2\", \"OjSrwARGqEIRQiifgvd1_5\")\n\ncmaes_100 <- c(\"5Y8tuHDjnkrC0YkeoZOF_9\", \"5Y8tuHDjnkrC0YkeoZOF_6\", \"5Y8tuHDjnkrC0YkeoZOF_16\", \"5Y8tuHDjnkrC0YkeoZOF_15\", \"5Y8tuHDjnkrC0YkeoZOF_5\", \"5Y8tuHDjnkrC0YkeoZOF_13\", \"5Y8tuHDjnkrC0YkeoZOF_7\", \"5Y8tuHDjnkrC0YkeoZOF_3\", \"5Y8tuHDjnkrC0YkeoZOF_19\", \"5Y8tuHDjnkrC0YkeoZOF_4\")\n\ncmaes_200 <- c(\"1iLLcAgkBkCpbNVA8wAy_13\", \"1iLLcAgkBkCpbNVA8wAy_17\", \"1iLLcAgkBkCpbNVA8wAy_12\", \"1iLLcAgkBkCpbNVA8wAy_7\", \"1iLLcAgkBkCpbNVA8wAy_11\", \"1iLLcAgkBkCpbNVA8wAy_4\", \"1iLLcAgkBkCpbNVA8wAy_10\", \"1iLLcAgkBkCpbNVA8wAy_18\", \"1iLLcAgkBkCpbNVA8wAy_20\", \"1iLLcAgkBkCpbNVA8wAy_1\")\n\ncmaes_300 <- c(\"NM7IhDftePjUHCsPbSVf_20\", \"NM7IhDftePjUHCsPbSVf_19\", \"NM7IhDftePjUHCsPbSVf_5\", \"NM7IhDftePjUHCsPbSVf_11\", \"NM7IhDftePjUHCsPbSVf_18\", \"NM7IhDftePjUHCsPbSVf_8\", \"NM7IhDftePjUHCsPbSVf_7\",  \"NM7IhDftePjUHCsPbSVf_10\", \"NM7IhDftePjUHCsPbSVf_4\", \"NM7IhDftePjUHCsPbSVf_12\")\n\ncmaes_500 <- c(\"RTzQId0lAZssIfVN4RSe_5\", \"RTzQId0lAZssIfVN4RSe_6\", \"RTzQId0lAZssIfVN4RSe_1\", \"RTzQId0lAZssIfVN4RSe_3\", \"RTzQId0lAZssIfVN4RSe_9\", \"RTzQId0lAZssIfVN4RSe_8\", \"RTzQId0lAZssIfVN4RSe_7\",  \"RTzQId0lAZssIfVN4RSe_10\",\"RTzQId0lAZssIfVN4RSe_2\", \"RTzQId0lAZssIfVN4RSe_4\")\n\ncmaes_1000 <- c(\"Hu20xx2CpCp4Fn63tkuA_16\", \"Hu20xx2CpCp4Fn63tkuA_3\", \"Hu20xx2CpCp4Fn63tkuA_17\", \"Hu20xx2CpCp4Fn63tkuA_2\", \"Hu20xx2CpCp4Fn63tkuA_10\", \"Hu20xx2CpCp4Fn63tkuA_14\", \"Hu20xx2CpCp4Fn63tkuA_15\", \"Hu20xx2CpCp4Fn63tkuA_1\", \"Hu20xx2CpCp4Fn63tkuA_5\", \"Hu20xx2CpCp4Fn63tkuA_19\")\n\n# Filter the experiments based on the randomly chosen set\nexp_bom_20 <- \n  experiments |> \n  mutate(id = paste0(experiment_id, \"_\", replication)) |> \n  filter(id %in% ids | \n           id %in% cmaes_40 | \n           id %in% cmaes_100 | \n           id %in% cmaes_200 | \n           id %in% cmaes_300 |\n           id %in% cmaes_500 |\n           id %in% cmaes_1000)\n\n\nHere is an overview of the experiments contained. We have a sample of n=15 replications for all algorithms and budgets, except for SASSBO:\n\n\nCode\nexp_bom_20 |> \n  group_by(algorithm, bom_id, budget) |> \n  summarize(n_replications = n_distinct(experiment_id, replication)) |> \n  print(n = 150)\n\n\n# A tibble: 27 x 4\n# Groups:   algorithm, bom_id [5]\n   algorithm bom_id budget n_replications\n   <fct>     <fct>  <fct>           <int>\n 1 Sobol     20     40                 15\n 2 Sobol     20     100                15\n 3 Sobol     20     200                15\n 4 Sobol     20     300                15\n 5 Sobol     20     500                15\n 6 Sobol     20     1000               15\n 7 GPEI      20     40                 15\n 8 GPEI      20     100                15\n 9 GPEI      20     200                15\n10 GPEI      20     300                15\n11 GPEI      20     500                15\n12 GPEI      20     1000               15\n13 TurBO     20     40                 15\n14 TurBO     20     100                15\n15 TurBO     20     200                15\n16 TurBO     20     300                15\n17 TurBO     20     500                15\n18 TurBO     20     1000               15\n19 CMA-ES    20     40                 15\n20 CMA-ES    20     100                15\n21 CMA-ES    20     200                15\n22 CMA-ES    20     300                15\n23 CMA-ES    20     500                15\n24 CMA-ES    20     1000               15\n25 SAASBO    20     40                 10\n26 SAASBO    20     100                 2\n27 SAASBO    20     200                 3"
  },
  {
    "objectID": "paper.html#boxplots",
    "href": "paper.html#boxplots",
    "title": "4  Paper",
    "section": "4.2 Boxplots",
    "text": "4.2 Boxplots\n\n\nCode\ncreate_boxplots_per_bom <- function(p_bom_id) {\n  \n  p <- exp_bom_20 |> \n    filter(bom_id == p_bom_id) |> \n    group_by(experiment_id, algorithm, budget, replication) |>\n    summarize(min_costs = min(candidate_y_costs_mean)) |> \n  \n    ggplot() +\n    aes(x = budget, y = min_costs, fill = algorithm) + \n    geom_boxplot() +\n    scale_fill_manual(values = algorithm_colors) +\n    scale_y_continuous(labels = comma) +\n    ggtitle(paste0(\"Distribution of best costs per algorithm (\", p_bom_id, \"-dimensions) \")) +\n    labs(x = \"Evaluation Budget\", y = \"Best Costs\", fill = \"Algorithm\") +\n    coord_cartesian(ylim = c(35000, 70000)) \n\n  return(p)\n}\n\nbox_20_bom <- create_boxplots_per_bom(\"20\")\n\n#ggsave(\"plots/boxplot_bom_20.svg\", box_20_bom, width = 7.73, height = 6.64, units = \"in\")\n\nbox_20_bom"
  },
  {
    "objectID": "paper.html#convergence",
    "href": "paper.html#convergence",
    "title": "4  Paper",
    "section": "4.3 Convergence",
    "text": "4.3 Convergence\n\n\nCode\nplot_convergence_by_bom__and_budget <- function(data, p_bom_id, p_budget, num_init, y_lims, show_legend = FALSE) {\n  \n  n <- data |> \n    filter(bom_id == p_bom_id, budget == p_budget) |> \n    summarise(n_exp = n_distinct(experiment_id, replication)) |> \n    pull()\n\n  plot <- data |> \n  filter(bom_id == p_bom_id) |> \n  filter(budget == p_budget) |> \n  select(experiment_id, replication, algorithm, candidate_id, candidate_sm, candidate_y_costs_mean, bom_id, budget) |> \n  mutate(is_init = candidate_sm == \"init\") |> \n  group_by(experiment_id, replication, algorithm,  bom_id, budget) |> \n  arrange(experiment_id, replication, candidate_id) |> \n  mutate(running_min_costs = cummin(candidate_y_costs_mean)) |> \n  \n  ggplot() +\n  aes(x = candidate_id, y = running_min_costs, color = algorithm, fill = algorithm) +\n  geom_smooth(level = 0.95, linewidth = 0.9, method = \"loess\", span = 0.6, se = FALSE, alpha = 0.2) +\n  geom_vline(xintercept = num_init, linetype = \"dashed\") +\n  scale_color_manual(values = algorithm_colors) +\n  scale_fill_manual(values = algorithm_colors) +\n  scale_y_continuous(labels = comma) +\n  scale_x_continuous(limits = c(0, as.integer(p_budget)), \n                     expand = c(0, 0), \n                     breaks = c(0, num_init, as.integer(p_budget) / 2, as.integer(p_budget))) +\n  ggtitle(paste0(\"Evaluation Budget \", p_budget)) +\n  labs(x = \"Candidate\", y = \"Costs\", color = \"Algorithm\") +\n  guides(fill = \"none\") +\n  coord_cartesian(ylim = y_lims) + \n  theme(axis.title.y = element_blank(), \n        #axis.text.y = element_blank(), \n        #axis.ticks.y = element_blank(),\n        axis.title.x = element_blank(),\n        plot.margin = unit(c(0.2, 0.4, 0.2, 0.2), \"cm\"),\n        plot.title = element_text(size = 8))\n  \n  if(show_legend == FALSE)  {\n    plot <- plot + theme(legend.position = \"none\")\n  } else {\n    plot <- plot + theme(\n      legend.position = c(0.8, 0.75), # Set the legend position inside the plot\n      legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.4),\n      legend.key.size = unit(0.7, \"lines\"),  # Adjust the size of the legend keys\n      legend.text = element_text(size = 7),\n      legend.title = element_text(size = 9)\n    )\n  }\n  \n  return(plot)\n}\n\np_bom_id <- \"20\"\ny_lims <- c(37000, 80000)\n\nplot_40 <- plot_convergence_by_bom__and_budget(exp_bom_20, p_bom_id, \"40\", 8, y_lims)\nplot_100 <- plot_convergence_by_bom__and_budget(exp_bom_20, p_bom_id, \"100\", 20, y_lims)\nplot_200 <- plot_convergence_by_bom__and_budget(exp_bom_20, p_bom_id, \"200\", 40, y_lims, show_legend = TRUE)\nplot_300 <- plot_convergence_by_bom__and_budget(exp_bom_20, p_bom_id, \"300\", 60, y_lims)\nplot_500 <- plot_convergence_by_bom__and_budget(exp_bom_20, p_bom_id, \"500\", 100, y_lims)\nplot_1000 <- plot_convergence_by_bom__and_budget(exp_bom_20, p_bom_id, \"1000\", 200, y_lims)\n\nplot_grid(plot_40, \n          plot_100, \n          plot_200, \n          plot_300,\n          plot_500, \n          plot_1000, \n          ncol = 3)"
  },
  {
    "objectID": "paper.html#summary-table",
    "href": "paper.html#summary-table",
    "title": "4  Paper",
    "section": "4.4 Summary Table",
    "text": "4.4 Summary Table\n\n\nCode\n#install.packages(\"gt\")\nlibrary(gt)\n\nexperiments |> \n  filter(budget == 1000) |> \n  group_by(experiment_id, bom_id, algorithm, budget, replication) |>\n  summarize(min_costs = min(candidate_y_costs_mean)) |> \n  ungroup() |> \n  group_by(bom_id, algorithm) |> \n  summarize(avg_best_costs = mean(min_costs),\n            median_best_costs = quantile(min_costs, 0.5),\n            sd_best_costs = sd(min_costs),\n            n = n()) |> \n  ungroup() |> \n  gt(rowname_col = \"algorithm\") |> \n  cols_label(\n    avg_best_costs = md(\"Mean\"),\n    median_best_costs = md(\"Median\"),\n    sd_best_costs = md(\"SD\"),\n    bom_id = md(\"BOM\")\n    ) |> \n  fmt_number(\n  columns = c(\"avg_best_costs\", \"median_best_costs\", \"sd_best_costs\"),\n  decimals = 0,\n  )\n\n\n\n\n\n\n  \n    \n    \n      \n      BOM\n      Mean\n      Median\n      SD\n      n\n    \n  \n  \n    Sobol\n4\n21,354\n21,211\n1,620\n25\n    GPEI\n4\n15,291\n15,419\n1,145\n25\n    TurBO\n4\n17,128\n17,166\n1,285\n25\n    CMA-ES\n4\n22,393\n18,102\n10,560\n25\n    Sobol\n10\n44,370\n44,632\n2,262\n55\n    GPEI\n10\n41,431\n41,354\n1,894\n35\n    TurBO\n10\n40,062\n40,620\n2,497\n35\n    CMA-ES\n10\n45,152\n43,538\n8,357\n25\n    Sobol\n20\n49,197\n49,271\n2,405\n35\n    GPEI\n20\n45,750\n45,258\n2,180\n15\n    TurBO\n20\n42,294\n42,111\n2,497\n15\n    CMA-ES\n20\n44,569\n43,406\n5,275\n25\n    Sobol\n50\n215,936\n215,540\n15,091\n15\n    GPEI\n50\n211,428\n210,178\n8,835\n15\n    TurBO\n50\n210,154\n213,889\n16,945\n15\n    CMA-ES\n50\n254,322\n242,793\n44,062\n25\n    Sobol\n100\n751,281\n740,880\n260,064\n15\n    GPEI\n100\n369,498\n372,070\n33,358\n15\n    TurBO\n100\n468,014\n444,405\n124,119\n15\n    CMA-ES\n100\n420,196\n418,767\n64,201\n5"
  },
  {
    "objectID": "paper.html#table-with-best-absolute",
    "href": "paper.html#table-with-best-absolute",
    "title": "4  Paper",
    "section": "4.5 Table with Best Absolute",
    "text": "4.5 Table with Best Absolute\n\n\nCode\nexperiments |> \n  group_by(experiment_id, bom_id, algorithm, budget, replication) |>\n  summarize(min_costs = min(candidate_y_costs_mean)) |> \n  ungroup() |> \n  group_by(bom_id, algorithm) |> \n  summarize(abs_min_costs = min(min_costs),\n            avg_best_costs = mean(min_costs),\n            median_best_costs = quantile(min_costs, 0.5),\n            sd_best_costs = sd(min_costs),\n            n = n()) |> \n  ungroup() |> \n  gt() |> \n   cols_label(\n    avg_best_costs = md(\"Mean\"),\n    median_best_costs = md(\"Median\"),\n    sd_best_costs = md(\"SD\"),\n    bom_id = md(\"BOM\"),\n    algorithm = md(\"Algorithm\"),\n    abs_min_costs = md(\"Absolute Best\")\n    ) |> \n  tab_options(\n  table.font.name = \"Times New Roman\") |> \n  opt_row_striping()\n\n\n\n\n\n\n  \n    \n    \n      BOM\n      Algorithm\n      Absolute Best\n      Mean\n      Median\n      SD\n      n\n    \n  \n  \n    4\nSobol\n17032.4\n25427.31\n25164.2\n4042.419\n190\n    4\nGPEI\n12983.6\n21698.47\n21367.2\n5555.013\n167\n    4\nTurBO\n14391.6\n18793.58\n18085.0\n2889.239\n166\n    4\nCMA-ES\n13381.4\n24482.52\n21299.2\n10572.547\n171\n    4\nSAASBO\n13960.4\n17484.78\n16902.6\n2010.345\n40\n    10\nSobol\n37933.2\n47975.38\n47197.4\n4451.562\n255\n    10\nGPEI\n38202.8\n46681.70\n45835.8\n5295.184\n294\n    10\nTurBO\n34621.4\n44279.53\n43616.0\n4253.482\n234\n    10\nCMA-ES\n35828.6\n48220.34\n47417.9\n8359.313\n150\n    10\nSAASBO\n36013.4\n42383.86\n41249.6\n5196.906\n10\n    20\nSobol\n44554.0\n53752.86\n53177.6\n5067.761\n150\n    20\nGPEI\n38906.0\n52797.44\n52376.2\n6688.489\n110\n    20\nTurBO\n36626.8\n47827.84\n47467.8\n4926.441\n110\n    20\nCMA-ES\n36440.4\n51420.06\n49153.6\n9568.285\n130\n    20\nSAASBO\n34799.0\n41911.59\n41921.6\n5716.454\n15\n    50\nSobol\n190086.2\n242117.65\n239925.8\n31513.576\n115\n    50\nGPEI\n193817.6\n237870.04\n233201.2\n25000.603\n115\n    50\nTurBO\n166340.4\n243370.60\n239657.6\n37476.057\n130\n    50\nCMA-ES\n184991.4\n284212.29\n277536.1\n55291.195\n120\n    100\nSobol\n378105.2\n1476141.71\n1257125.4\n883427.988\n131\n    100\nGPEI\n300594.0\n998019.30\n610016.8\n897051.397\n114\n    100\nTurBO\n238459.0\n956354.97\n572872.6\n805430.138\n115\n    100\nCMA-ES\n284882.2\n1633244.20\n751688.5\n1893583.563\n90"
  },
  {
    "objectID": "results_summary.html",
    "href": "results_summary.html",
    "title": "5  Results Summary",
    "section": "",
    "text": "This chapter contains high-level summary plots with the main results across the different bill of materials and algorithms and their results."
  },
  {
    "objectID": "results_summary.html#best-results-by-bom-and-algorithm-boxplots",
    "href": "results_summary.html#best-results-by-bom-and-algorithm-boxplots",
    "title": "5  Results Summary",
    "section": "5.1 Best Results by BOM and Algorithm (Boxplots)",
    "text": "5.1 Best Results by BOM and Algorithm (Boxplots)\n\n\nCode\ncreate_boxplots_per_bom <- function(p_bom_id) {\n  \n  p <- experiments |> \n    filter(bom_id == p_bom_id) |> \n    group_by(experiment_id, algorithm, budget, replication) |>\n    summarize(min_costs = min(candidate_y_costs_mean)) |> \n  \n    ggplot() +\n    aes(x = budget, y = min_costs, fill = algorithm) + \n    geom_boxplot() +\n    scale_fill_manual(values = algorithm_colors) +\n    scale_y_continuous(labels = comma) +\n    ggtitle(paste0(\"Distribution of best costs per algorithm for BOM \", p_bom_id)) +\n    labs(x = \"Budget\", y = \"Best Costs\", fill = \"Algorithm\")\n    #coord_cartesian(ylim = c(0, 40000)) \n\n  return(p)\n}\n\ncreate_boxplots_per_bom(\"4\")\n\n\n\n\n\n\nFor GPEI, the best point improves with more evaluation budget. At the same time, the results become more consistent with less variation. The best point is more reliably found.\nCMA-ES shows the largest variation as shown by the height of the boxes. Good points are not always found. This could be due to the fact that the algorithm can get stuck in a local minimum. CMA-ES is also the only algorithm with consistent large outliers, which underlines this hypothesis.\n\n\n\nCode\ncreate_boxplots_per_bom(\"10\")\n\n\n\n\n\n\n\nCode\ncreate_boxplots_per_bom(\"20\")\n\n\n\n\n\n\n\nCode\ncreate_boxplots_per_bom(\"50\")\n\n\n\n\n\n\n\nCode\ncreate_boxplots_per_bom(\"100\")"
  },
  {
    "objectID": "convergence.html",
    "href": "convergence.html",
    "title": "6  Convergence",
    "section": "",
    "text": "In this chapter, we examine how the different algorithms converge in comparison."
  },
  {
    "objectID": "convergence.html#dimensional",
    "href": "convergence.html#dimensional",
    "title": "6  Convergence",
    "section": "6.1 4-dimensional",
    "text": "6.1 4-dimensional\n\n\nCode\nplot_convergence_by_bom__and_budget <- function(data, p_bom_id, p_budget, num_init, y_lims, show_legend = FALSE) {\n  \n  n <- experiments |> \n    filter(bom_id == p_bom_id, budget == p_budget) |> \n    summarise(n_exp = n_distinct(experiment_id, replication)) |> \n    pull()\n\n  plot <- data |> \n  filter(bom_id == p_bom_id) |> \n  filter(budget == p_budget) |> \n  select(experiment_id, replication, algorithm, candidate_id, candidate_sm, candidate_y_costs_mean, bom_id, budget) |> \n  mutate(is_init = candidate_sm == \"init\") |> \n  group_by(experiment_id, replication, algorithm,  bom_id, budget) |> \n  arrange(experiment_id, replication, candidate_id) |> \n  mutate(running_min_costs = cummin(candidate_y_costs_mean)) |> \n  \n  ggplot() +\n  aes(x = candidate_id, y = running_min_costs, color = algorithm, fill = algorithm) +\n  geom_smooth(alpha = 0.1, level = 0.95, linewidth = 0.9) +\n  geom_vline(xintercept = num_init, linetype = \"dashed\") +\n  scale_color_manual(values = algorithm_colors) +\n  scale_fill_manual(values = algorithm_colors) +\n  scale_y_continuous(labels = comma) +\n  scale_x_continuous(limits = c(0, as.integer(p_budget)), \n                     expand = c(0, 0), \n                     breaks = c(0, num_init, as.integer(p_budget) / 2, as.integer(p_budget))) +\n  ggtitle(paste0(\"BOM \", p_bom_id, \" / Budget \", p_budget, \" (n = \", as.character(n), \")\")) +\n  labs(x = \"Candidate\", y = \"Costs\", color = \"Algorithm\") +\n  guides(fill = \"none\") +\n  coord_cartesian(ylim = y_lims) + \n  theme(axis.title.y = element_blank(), \n        #axis.text.y = element_blank(), \n        #axis.ticks.y = element_blank(),\n        axis.title.x = element_blank(),\n        plot.margin = unit(c(0.2, 0.4, 0.2, 0.2), \"cm\"),\n        plot.title = element_text(size = 8))\n  \n  if(show_legend == FALSE)  {\n    plot <- plot + theme(legend.position = \"none\")\n  } else {\n    plot <- plot + theme(legend.position = \"bottom\")\n  }\n  \n  return(plot)\n}\n\ny_lims <- c(15000, 70000)\nplot_40 <- plot_convergence_by_bom__and_budget(experiments, \"4\", \"40\", 8, y_lims)\nplot_100 <- plot_convergence_by_bom__and_budget(experiments, \"4\", \"100\", 20, y_lims)\nplot_200 <- plot_convergence_by_bom__and_budget(experiments, \"4\", \"200\", 40, y_lims)\nplot_300 <- plot_convergence_by_bom__and_budget(experiments, \"4\", \"300\", 60, y_lims)\nplot_500 <- plot_convergence_by_bom__and_budget(experiments, \"4\", \"500\", 100, y_lims)\nplot_1000 <- plot_convergence_by_bom__and_budget(experiments, \"4\", \"1000\", 200, y_lims)\n\n\nplot_grid(plot_40, \n          plot_100, \n          plot_200, \n          plot_300,\n          plot_500, \n          plot_1000, \n          ncol = 3)"
  },
  {
    "objectID": "convergence.html#dimensional-1",
    "href": "convergence.html#dimensional-1",
    "title": "6  Convergence",
    "section": "6.2 10-dimensional",
    "text": "6.2 10-dimensional\n\n\nCode\np_bom_id <- \"10\"\ny_lims <- c(38000, 80000)\n\nplot_40 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"40\", 8, y_lims)\nplot_100 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"100\", 20, y_lims)\nplot_200 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"200\", 40, y_lims)\nplot_300 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"300\", 60, y_lims)\nplot_500 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"500\", 100, y_lims)\nplot_1000 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"1000\", 200, y_lims)\n\n\nplot_grid(plot_40, \n          plot_100, \n          plot_200, \n          plot_300,\n          plot_500, \n          plot_1000, \n          ncol = 3)"
  },
  {
    "objectID": "convergence.html#dimensional-2",
    "href": "convergence.html#dimensional-2",
    "title": "6  Convergence",
    "section": "6.3 20-dimensional",
    "text": "6.3 20-dimensional\n\n\nCode\np_bom_id <- \"20\"\ny_lims <- c(40000, 90000)\n\nplot_40 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"40\", 8, y_lims)\nplot_100 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"100\", 20, y_lims)\nplot_200 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"200\", 40, y_lims)\nplot_300 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"300\", 60, y_lims)\nplot_500 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"500\", 100, y_lims)\nplot_1000 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"1000\", 200, y_lims)\n\n\nplot_grid(plot_40, \n          plot_100, \n          plot_200, \n          plot_300,\n          plot_500, \n          plot_1000, \n          ncol = 3)"
  },
  {
    "objectID": "convergence.html#dimensional-3",
    "href": "convergence.html#dimensional-3",
    "title": "6  Convergence",
    "section": "6.4 50-dimensional",
    "text": "6.4 50-dimensional\n\n\nCode\np_bom_id <- \"50\"\ny_lims <- c(200000, 1000000)\n\nplot_40 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"40\", 8, y_lims)\nplot_100 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"100\", 20, y_lims)\nplot_200 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"200\", 40, y_lims)\nplot_300 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"300\", 60, y_lims)\nplot_500 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"500\", 100, y_lims)\nplot_1000 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"1000\", 200, y_lims)\n\n\nplot_grid(plot_40, \n          plot_100, \n          plot_200, \n          plot_300,\n          plot_500, \n          plot_1000, \n          ncol = 3)"
  },
  {
    "objectID": "convergence.html#dimensional-4",
    "href": "convergence.html#dimensional-4",
    "title": "6  Convergence",
    "section": "6.5 100-dimensional",
    "text": "6.5 100-dimensional\n\n\nCode\np_bom_id <- \"100\"\ny_lims <- c(300000, 5000000)\n\nplot_40 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"40\", 8, y_lims)\nplot_100 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"100\", 20, y_lims)\nplot_200 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"200\", 40, y_lims)\nplot_300 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"300\", 60, y_lims)\nplot_500 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"500\", 100, y_lims)\nplot_1000 <- plot_convergence_by_bom__and_budget(experiments, p_bom_id, \"1000\", 200, y_lims)\n\n\nplot_grid(plot_40, \n          plot_100, \n          plot_200, \n          plot_300,\n          plot_500, \n          plot_1000, \n          ncol = 3)"
  },
  {
    "objectID": "reliability.html",
    "href": "reliability.html",
    "title": "7  Reliability",
    "section": "",
    "text": "This chapter analyzes the reliability of the different algorithms. That is, how reliably does it find the best point, given a specific budget."
  },
  {
    "objectID": "reliability.html#crosshairs-plots",
    "href": "reliability.html#crosshairs-plots",
    "title": "7  Reliability",
    "section": "7.1 Crosshairs Plots",
    "text": "7.1 Crosshairs Plots\n\n7.1.1 Preparation\n\n\nCode\nplot_best_costs_in_trial <- function(p_bom_id) {\n\n  # Calculate the pest costs and service level and the candidate (trial) in which is was found\n  # per experiment replication\n  best_per_replication <- experiments |> \n    filter(bom_id == p_bom_id) |> \n    group_by(experiment_id, replication, algorithm, budget, bom_id) |> \n    summarize(min_costs = min(candidate_y_costs_mean),\n              min_costs_found_in_trial = candidate_id[which.min(candidate_y_costs_mean)])\n  \n  # Calculate the average best costs per algorithm and budget (for given bom_id)\n  avg_per_algorithm_budget <- \n    best_per_replication |> \n    group_by(algorithm, budget) |> \n    summarize(num_iterations = n(),\n              avg_min_costs = mean(min_costs), \n              sem_min_costs = sd(min_costs),\n              avg_min_costs_found_in_trial = mean(min_costs_found_in_trial),\n              sem_min_costs_found_in_trial = sd(min_costs_found_in_trial)\n    ) |> \n    mutate(upper_min_costs = avg_min_costs + sem_min_costs, \n           lower_min_costs = avg_min_costs - sem_min_costs,\n           upper_found_in_trial = avg_min_costs_found_in_trial + sem_min_costs_found_in_trial,\n           lower_found_in_trial = avg_min_costs_found_in_trial - sem_min_costs_found_in_trial)\n  \n  plot <-\n    avg_per_algorithm_budget |> \n      ggplot() +\n      aes(x = avg_min_costs_found_in_trial, y = avg_min_costs, color = algorithm) +\n      geom_point(size = 3) +\n      geom_errorbar(aes(ymin = lower_min_costs, ymax = upper_min_costs), width = 0) +\n      geom_errorbar(aes(xmin = lower_found_in_trial, xmax = upper_found_in_trial), width = 0) +\n      #geom_point(best_per_iteration, \n                 #mapping = aes(x = min_costs_found_in_trial, y = min_costs, color = algorithm), \n                 #size = 1.5,\n                 #alpha = 0.2) +\n      scale_color_manual(values = algorithm_colors) +\n      scale_y_continuous(labels = comma) +\n      theme_bw() +\n      ggtitle(paste0(\"Best point found by trial and algorithm (dimensions = \", p_bom_id,\")\")) +\n      labs(x = \"Best value found in trial\", y = \"Best value found\") +\n      facet_wrap(~budget, ncol = 3)\n\n  return(plot)\n  \n}\n\n\n\n\n7.1.2 4-dimensional\n\n\nCode\nplot_best_costs_in_trial(\"4\")\n\n\n\n\n\n\n\n7.1.3 10-dimensional\n\n\nCode\nplot_best_costs_in_trial(\"10\")\n\n\n\n\n\n\n\n7.1.4 20-dimensional\n\n\nCode\nplot_best_costs_in_trial(\"20\")\n\n\n\n\n\n\n\n7.1.5 50-dimensional\n\n\nCode\nplot_best_costs_in_trial(\"50\")\n\n\n\n\n\n\n\n7.1.6 100-dimensional\n\n\nCode\nplot_best_costs_in_trial(\"100\")"
  },
  {
    "objectID": "reliability.html#density-plots",
    "href": "reliability.html#density-plots",
    "title": "7  Reliability",
    "section": "7.2 Density Plots",
    "text": "7.2 Density Plots\n\n7.2.1 Preparation\n\n\nCode\nlibrary(ggdensity)\n\nplot_best_costs_in_trial_density <- function(p_bom_id, p_budget) {\n  best_per_replication <- experiments |> \n    filter(bom_id == p_bom_id) |> \n    filter(budget == p_budget) |> \n    group_by(experiment_id, replication, algorithm, budget, bom_id) |> \n    summarize(min_costs = min(candidate_y_costs_mean),\n              min_costs_found_in_trial = candidate_id[which.min(candidate_y_costs_mean)])\n\n  pb <- c(0.75, 0.5, 0.25, 0.1) \n  plot <-\n    ggplot(best_per_replication) +\n    aes(x = min_costs_found_in_trial, y = min_costs, fill = algorithm) +\n    #geom_point(alpha = 1, shape = 20) +\n    geom_hdr(probs = pb, linewidth = 0.5) +\n    scale_color_manual(values = algorithm_colors) +\n    scale_fill_manual(values = algorithm_colors) +\n    scale_y_continuous(labels = comma) +\n    facet_wrap(~algorithm, ncol = 3) +\n    labs(alpha = \"Probability\", fill = \"Algorithm\", x = \"Best value found in trial\", y = \"Best value found\") +\n    ggtitle(paste0(\"Density of best points found by trial and algorithm (dim=\", p_bom_id,\" / budget=\", p_budget, \")\")) +\n    theme_simbo()\n\n  return(plot)\n}\n\n\n\n\n7.2.2 4-dimensional\n\n\nCode\nplot_best_costs_in_trial_density(\"4\", 40)\n\n\n\n\n\n\n\nCode\nplot_best_costs_in_trial_density(\"4\", 100)\n\n\n\n\n\n\n\nCode\nplot_best_costs_in_trial_density(\"4\", 200)\n\n\n\n\n\n\n\nCode\nplot_best_costs_in_trial_density(\"4\", 300)\n\n\n\n\n\n\n\nCode\nplot_best_costs_in_trial_density(\"4\", 500)\n\n\n\n\n\n\n\nCode\nplot_best_costs_in_trial_density(\"4\", 1000)"
  },
  {
    "objectID": "sobol.html",
    "href": "sobol.html",
    "title": "8  Sobol",
    "section": "",
    "text": "This chapter contains analysis for the Sobol algorithm."
  },
  {
    "objectID": "sobol.html#costs-distribution",
    "href": "sobol.html#costs-distribution",
    "title": "8  Sobol",
    "section": "8.1 Costs Distribution",
    "text": "8.1 Costs Distribution\nThese plots are to verify the distribution of the costs. Since Sobol is space covering, the result should be representative.\n\n\nCode\np_bom_id = \"4\"\n\ncreate_costs_hist <- function(p_bom_id) {\n  experiments |> \n  filter(algorithm == \"Sobol\") |> \n  filter(bom_id == p_bom_id) |> \n  ggplot() +\n  aes(x = candidate_y_costs_mean) +\n  geom_histogram() +\n  scale_x_continuous(labels = comma) +\n  labs(x = \"Costs\", y = \"Count\") +\n  ggtitle(paste0(\"Distribution of costs outcome for BOM \", p_bom_id))\n}\n\ncreate_costs_hist(\"4\")\n\n\n\n\n\n\n\nCode\ncreate_costs_hist(\"10\")\n\n\n\n\n\n\n\nCode\ncreate_costs_hist(\"20\")\n\n\n\n\n\n\n\nCode\ncreate_costs_hist(\"50\")\n\n\n\n\n\n\n\nCode\ncreate_costs_hist(\"100\")"
  }
]